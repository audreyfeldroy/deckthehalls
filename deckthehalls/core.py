"""A merry FastHTML nbdev project that uses Pygments for Christmas joy"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['pl', 'styles', 'app', 'rt', 'colorize', 'colorized_cells', 'index']

# %% ../nbs/00_core.ipynb 3
from execnb.nbio import *
from fastcore.all import *
from fasthtml.common import *
from fasthtml.jupyter import *
from pathlib import Path
import pygments
from pygments import highlight
from pygments.lexers import PythonLexer
from pygments.formatters import HtmlFormatter
from random import choice

# %% ../nbs/00_core.ipynb 4
pl = PythonLexer()

# %% ../nbs/00_core.ipynb 5
styles = L(pygments.styles.STYLES.items()).itemgot(1).itemgot(1)

# %% ../nbs/00_core.ipynb 6
def colorize(c, fm):
    "Highlight cell source using Pygments"
    return highlight(c.source, lexer=PythonLexer(), formatter=fm)

# %% ../nbs/00_core.ipynb 7
def colorized_cells(cells, fm):
    "Apply colorize to collection of cells"
    return cells.map(partial(colorize, fm=fm)).map(NotStr)

# %% ../nbs/00_core.ipynb 9
app,rt = fast_app()

# %% ../nbs/00_core.ipynb 10
@rt
def index():
    nb = read_nb(Path("../nbs/deck-the-halls.ipynb"))
    code_cells = L(nb.cells).filter(lambda x: x.cell_type == 'code')
    style = choice(styles)
    fm = HtmlFormatter(style=style)
    return (
        H1(f"Random style: {style}"),
        P("This page gets a random ",
            A("Pygments", href="https://pygments.org/"),
            " HtmlFormatter style and applies it to ",
            A("my Deck the Halls Jupyter notebook", href="https://nbsanity.com/static/a426287f3fbfc5a38c99291beadc77d3/2024-12-24-deck-the-halls.html")),
        Style(fm.get_style_defs()),
        Style(".highlight{border:1px solid gray;margin:10px;}"),
        Div(*colorized_cells(code_cells, fm))
    )
